/* remove browser default styles */
button, input, select {
	font-size: inherit;
	font-family: inherit;
	line-height: inherit;
	background: inherit;
	color: inherit;
	padding: 0;
	margin: 0;
	border: none;
	border-radius: 0;
	outline: none;
	box-shadow: none;
	-webkit-appearance: none;
}

/* theme */
:root {
	--bitsy-bg-color: #ccccff; /* color names?? */
	--bitsy-card-color: #ffffff;
	--bitsy-text-color: #6767b2;
	--bitsy-button-color: #e8e8ff;
	--bitsy-button-display: inline-flex;
	--bitsy-margin-xs: 0.125rem;
	--bitsy-margin-s: 0.25rem;
	--bitsy-margin-m: 0.5rem;
	--bitsy-margin-l: 1.0rem;
}

/* page */
html {
	font-family: "Nunito", Helvetica, Arial, sans-serif;
	font-size: 100%;
	line-height: 100%;
	width: 100%;
	height: 100%;
	background: var(--bitsy-card-color);
	color: var(--bitsy-text-color);
	overscroll-behavior: none;
	scrollbar-color: var(--bitsy-text-color) var(--bitsy-button-color);
}

body {
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100%;
}

p {
	margin-top: 0;
}

span {
	display: inline-flex;
}

/* webkit scrollbar */
/*::-webkit-scrollbar {
	background-color: var(--bitsy-button-color);
	border-radius: var(--bitsy-margin-s);
	width: var(--bitsy-margin-m);
	height: var(--bitsy-margin-m);
}

::-webkit-scrollbar-thumb {
	background-color: var(--bitsy-text-color);
	border-radius: var(--bitsy-margin-s);
}*/

/* gaps */
button > *,
label > *,
.bitsy-toolbar-toggles > *,
.bitsy-menubar-group > * {
	margin: var(--bitsy-margin-xs);
}

/* very hacky: I should probably fix the fact that forms are getting nested within menubar-groups.. */
.bitsy-menubar-group > form {
	margin: 0;
}

/* button */
button {
	background: var(--bitsy-button-color);
	display: var(--bitsy-button-display);
	padding: var(--bitsy-margin-s);
	/*gap: var(--bitsy-margin-m);*/
	align-items: center;
	border-radius: var(--bitsy-margin-s);
}

button:active {
	background: var(--bitsy-text-color);
	color: var(--bitsy-card-color);
}

button:disabled {
	opacity: 0.5;
}

/* label */
label {
	display: var(--bitsy-button-display);
	padding: var(--bitsy-margin-s);
	/*gap: var(--bitsy-margin-m);*/
	align-items: center;
	border-radius: var(--bitsy-margin-s);
}

/* canvas */
canvas {
	margin-bottom: var(--bitsy-margin-s);
}

/* icon */
.bitsy_icon svg {
	width: 1em;
	height: 1em;
	fill: currentColor;
}

/* forms, inputs, selects */
form {
	display: flex;
	flex-grow: 1;
	flex-wrap: nowrap !important; /* I don't like using important */
}

form label {
	border-radius: 0;
	/*margin-right: 0 !important;*/
}

form label:first-of-type {
	border-radius: var(--bitsy-margin-s) 0 0 var(--bitsy-margin-s);
}

form label:last-of-type {
	border-radius: 0 var(--bitsy-margin-s) var(--bitsy-margin-s) 0;
}

select, input {
	font-family: monospace;
	flex-grow: 1;
	width: 0;
	padding: var(--bitsy-margin-s);
	border: solid var(--bitsy-margin-xs);
	border-color: var(--bitsy-button-color);
	border-radius: var(--bitsy-margin-s);
}

select {
	background-image: url(../image/down_arrow_select.svg);
	background-position: center right;
	background-repeat: no-repeat;
	background-size: var(--bitsy-margin-l);
	padding-right: calc(1.25 * var(--bitsy-margin-l));
}

select:hover, input:hover {
	border-color: var(--bitsy-text-color);
}

select:focus, input:focus {
	border-color: var(--bitsy-text-color);
	/*outline: solid var(--bitsy-margin-xs) var(--bitsy-text-color);*/
}

input + label {
	background: var(--bitsy-button-color);
	display: var(--bitsy-button-display);
	padding: var(--bitsy-margin-s);
	/*gap: var(--bitsy-margin-m);*/
	align-items: center;
}

input:checked + label {
	background: var(--bitsy-text-color);
	color: var(--bitsy-card-color);
}

input:disabled + label {
	opacity: 0.5;
}

input:disabled {
	background: var(--bitsy-button-color);
	opacity: 0.5;
}

input:disabled:hover {
	border-color: var(--bitsy-button-color);
}

/* checkbox */
input[type=checkbox] {
	display: none;
}

/* radio */
input[type=radio] {
	display: none;
}

input[type=radio] + label {
	flex-grow: 1;
	align-content: center;
	justify-content: center;
}

/* number */
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

/* file */
input[type=file] {
	display: none;
}

/* textarea */
textarea {
	background: black;
	color: white;
	border: none;
	width: calc(100% - (var(--bitsy-margin-s) * 2));
	resize: vertical;
	margin-bottom: var(--bitsy-margin-s);
	padding: var(--bitsy-margin-s);
	scrollbar-color: white black;
	border-radius: var(--bitsy-margin-s);
}

/* root */
.bitsy-main {
	display: flex;
	flex-direction: column;
	height: calc(100% - (var(--bitsy-margin-s) * 2));
	/*width: calc(100% - (var(--bitsy-margin-s) * 2));*/
	width: 100%;
	/*padding: var(--bitsy-margin-s);*/
	/*overflow: hidden;*/
	/*height: 100%;*/
}

.bitsy-main-workbench { /* name? */
	flex-grow: 1;
	display: flex;
	flex-direction: column;
	overflow: hidden; /* I feel this shouldn't be needed? */
	padding: var(--bitsy-margin-s);
	background: var(--bitsy-bg-color);
	/*border-radius: var(--bitsy-margin-m);*/
	border-radius: 0 0 var(--bitsy-margin-s) var(--bitsy-margin-s);
}

/* main menu */
.bitsy-menubar {
	flex-shrink: 0;
	display: flex;
	background: var(--bitsy-card-color);
	padding: var(--bitsy-margin-m);
	/*gap: var(--bitsy-margin-s);*/
	align-items: center;
	/*box-shadow: var(--bitsy-margin-s) 0 var(--bitsy-margin-s) var(--bitsy-text-color);*/
}

.bitsy-menubar-logo {
	flex-grow: 1;
	display: var(--bitsy-button-display);
	justify-content: center;
	font-size: 150%;
}

.bitsy-menubar-logo > * {
	margin: var(--bitsy-margin-s);
}

/* toolbar */
.bitsy-toolbar {
	position: absolute;
	top: 0;
	left: 0;
	z-index: 100;
	transform: translateX(-20em);
	height: 100vh;
	width: 12em;
	display: flex;
	flex-direction: column;
	background: var(--bitsy-card-color);
	box-shadow: 0 0 var(--bitsy-margin-m) var(--bitsy-text-color);
	transition: transform 0.5s;
	border-radius: 0 var(--bitsy-margin-s) var(--bitsy-margin-s) 0;
}

.bitsy-toolbar-open {
	transform: translateX(0em);
}

.bitsy-toolbar-toggles {
	display: flex;
	flex-direction: column;
	padding: var(--bitsy-margin-m);
	/*gap: var(--bitsy-margin-s);*/
	overflow-y: auto;
	overflow-x: hidden;
}

/* title */
.bitsy-title-edit {
	display: flex;
	flex-shrink: 0;
	padding: var(--bitsy-margin-s);
	margin: var(--bitsy-margin-m);
	margin-bottom: 0;
	background: var(--bitsy-card-color);
	border-radius: var(--bitsy-margin-s);
	border-bottom: solid var(--bitsy-margin-xs) var(--bitsy-text-color);
}

/* card view */
.bitsy-card-view {
	overscroll-behavior: none;
	display: flex;
	flex-grow: 1;
	overflow-x: scroll;
	margin: var(--bitsy-margin-m);
	margin-top: 0;
	margin-bottom: 0;
	padding: var(--bitsy-margin-s);
	padding-bottom: var(--bitsy-margin-l);
	padding-top: 0;
	padding-left: 0;
}

@media (max-aspect-ratio: 3/4) {
	.bitsy-card-view {
		scroll-snap-type: x mandatory;
	}
}

.bitsy-card-container {
	display: flex;
	align-items: flex-start;
}

/* cards */
.cardui-card {
	background: var(--bitsy-card-color);
	margin: var(--bitsy-margin-m);
	margin-left: 0;
	display: inline-flex;
	flex-direction: column;
	max-height: 100%;
	border-radius: var(--bitsy-margin-s);
	border-bottom: solid var(--bitsy-margin-xs) var(--bitsy-text-color);
}

@media (max-aspect-ratio: 3/4) {
	.cardui-card {
		width: calc(100vw - (6 * var(--bitsy-margin-s)));
		scroll-snap-align: center;
	}
}

/* todo - name? */
.bitsy-menubar-group {
	display: flex;
	flex-wrap: wrap;
	/*gap: var(--bitsy-margin-s);*/
	margin-bottom: var(--bitsy-margin-s);
	align-items: center;
}

.bitsy-menu-scrollview {
	flex-grow: 1;
	flex-basis: 100%;
	border: solid var(--bitsy-margin-xs);
	border-color: var(--bitsy-button-color);
	padding: var(--bitsy-margin-m);
	overflow-y: auto;
	border-radius: var(--bitsy-margin-s);
}

.cardui-titlebar {
	flex-shrink: 0;
	display: flex;
	padding: var(--bitsy-margin-s);
	background: var(--bitsy-button-color);
	border-radius: var(--bitsy-margin-s) var(--bitsy-margin-s) 0 0;
}

.cardui-icon {
	margin: var(--bitsy-margin-s);
}

.cardui-title {
	flex-grow: 1;
	/*text-align: center;*/
	justify-content: center;
	margin: var(--bitsy-margin-s);
	user-select: none;
}

.cardui-main {
	flex-grow: 1;
	padding: var(--bitsy-margin-m);
	max-height: 100%;
	overflow-y: auto;
	overflow-x: hidden;
}

@media (min-aspect-ratio: 3/4) {
	.cardui-main.cardui-size-xsmall {
		width: 8rem;
	}

	.cardui-main.cardui-size-small {
		width: 16rem;
	}

	.cardui-main.cardui-size-medium {
		width: 24rem;
	}

	.cardui-main.cardui-size-large {
		width: 32rem;
	}
}

.cardui-main canvas {
	width: 100%;
}

/* legacy */
.bitsy-legacy-container {
	display: none;
}

.cardui-legacy-wrapper {
	display: flex;
	flex-direction: column;
	height: 100%;
}

.bitsy-legacy-flex-col {
	display: flex;
	flex-direction: column;
}

.panelShadow {
	background: var(--bitsy-text-color);
	margin: var(--bitsy-margin-m);
	margin-left: 0;
	border-radius: var(--bitsy-margin-s);
}

/* legacy - specific tools */
#dataInner {
	flex-grow: 1;
}

#game_data {
	height: 30em;
	resize: none;
	flex-grow: 1;
}

#gifPreview {
	width: 100%;
}

#gifPlaceholder {
	width: 100%;
	padding-top: 100%; /* make it square! */
	background: var(--bitsy-button-color);
}

#paintExplorerInner {
	flex-grow: 1;
	display: flex;
	flex-direction: column;
	overflow: hidden;
}

#paintExplorerForm {
	display: inline-block;
}

#paintExplorerFormInner > * {
	margin: var(--bitsy-margin-s);
}

.explorerThumbnail {
	width: 3rem;
}

#inventoryInner {
	flex-grow: 1;
	display: flex;
	flex-direction: column;
	overflow: hidden;
}

#colorPickerContainer {
	position: relative;
}

#colorPickerSelect {
	position: absolute;
	top: 0;
	left: 0;
}

#colorPickerSliderBg {
	padding: var(--bitsy-margin-s);
	margin: var(--bitsy-margin-s);
}

#colorPickerSliderThumb {
	height: var(--bitsy-margin-m);
	width: var(--bitsy-margin-m);
	background: white;
	border: solid var(--bitsy-margin-s) black;
	pointer-events: none;
}

#colorPaletteForm input[type=radio] + label {
	border: solid 1px #ddd;
	margin: var(--bitsy-margin-s);
}

#colorPaletteForm input[type=radio]:checked + label {
	border: solid 2px black;
}

#colorPaletteForm input[type="radio"] + label.colorPaletteLabelDark {
	color: white; /* white text for dark backgrounds */
}

#colorPaletteForm input[type="radio"] + label.colorPaletteLabelLight {
	color: black; /* black text for light backgrounds */
}

#markersSelect {
	display: flex;
}

#markerControl1 {
	display: flex;
	flex-direction: column;
	flex-basis: 8rem;
	flex-grow: 2;
}

#markerControl2 {
	display: flex;
	flex-direction: column;
	flex-basis: 8rem;
	flex-grow: 2;
}

#markerLinkControl {
	flex-grow: 1;
	display: flex;
	align-items: center;
	justify-content: center;
}